import React, { useState, useEffect } from 'react';
import { 
  Activity, AlertTriangle, Monitor, Search, Bell, Ticket, Mail, Settings, 
  Shield, TrendingUp, Zap, RefreshCw, Eye, X, Brain, MessageSquare, 
  Network, Share2, Target, Database, Wifi, Server, Lock, Container, HardDrive
} from 'lucide-react';

function App() {
  const [dashboardStats, setDashboardStats] = useState({});
  const [incidents, setIncidents] = useState([]);
  const [selectedIncident, setSelectedIncident] = useState(null);
  const [mcpContexts, setMcpContexts] = useState([]);
  const [a2aMessages, setA2aMessages] = useState([]);
  const [a2aCollaborations, setA2aCollaborations] = useState([]);
  const [showMcpModal, setShowMcpModal] = useState(false);
  const [showA2aModal, setShowA2aModal] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [activeWorkflows, setActiveWorkflows] = useState(new Set());

  useEffect(() => {
    fetchAllData();
    const interval = setInterval(fetchAllData, 3000);
    return () => clearInterval(interval);
  }, []);

  const fetchAllData = async () => {
    try {
      const [statsRes, incidentsRes, mcpRes, a2aRes] = await Promise.all([
        fetch('/api/dashboard/stats'),
        fetch('/api/incidents?limit=10'),
        fetch('/api/mcp/contexts'),
        fetch('/api/a2a/messages/history?limit=20')
      ]);

      const [statsData, incidentsData, mcpData, a2aData] = await Promise.all([
        statsRes.json(),
        incidentsRes.json(),
        mcpData.json(),
        a2aData.json()
      ]);

      setDashboardStats(statsData);
      setIncidents(incidentsData.incidents || []);
      setMcpContexts(mcpData.contexts || []);
      setA2aMessages(a2aData.recent_messages || []);
      setIsLoading(false);
      
      const activeIds = new Set(incidentsData.incidents
        .filter(i => i.workflow_status === 'in_progress')
        .map(i => i.id));
      setActiveWorkflows(activeIds);
      
    } catch (err) {
      console.error('Failed to fetch data:', err);
      setIsLoading(false);
    }
  };

  const fetchA2aCollaborations = async () => {
    try {
      const response = await fetch('/api/a2a/collaborations');
      const data = await response.json();
      setA2aCollaborations(data.collaborations || []);
    } catch (err) {
      console.error('Failed to fetch A2A collaborations:', err);
    }
  };

  const triggerTestIncident = async () => {
    try {
      const response = await fetch('/api/trigger-incident', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title: '', description: '', severity: 'high' })
      });
      const result = await response.json();
      
      const alertMessage = `🚀 NEW MCP+A2A ENHANCED INCIDENT!\n\n` +
                          `Type: ${result.incident_type}\n` +
                          `Severity: ${result.severity}\n` +
                          `ID: ${result.incident_id}\n` +
                          `MCP Context: ${result.mcp_context_id?.slice(0,8)}...\n\n` +
                          `🧠 Model Context Protocol: Agents share intelligence\n` +
                          `🤝 Agent-to-Agent Protocol: Direct collaboration`;
      
      alert(alertMessage);
      fetchAllData();
      
    } catch (err) {
      console.error('Failed to trigger incident:', err);
      alert('Failed to trigger incident. Please try again.');
    }
  };

  const viewIncidentDetails = async (incidentId) => {
    try {
      const response = await fetch(`/api/incidents/${incidentId}/status`);
      const incidentData = await response.json();
      setSelectedIncident(incidentData);
    } catch (err) {
      console.error('Failed to fetch incident details:', err);
    }
  };

  const getIncidentTypeIcon = (incidentType) => {
    const icons = {
      database: Database, security: Lock, network: Wifi,
      infrastructure: Server, container: Container, api: Activity
    };
    return icons[incidentType] || AlertTriangle;
  };

  const getIncidentTypeColor = (incidentType) => {
    const colors = {
      database: 'text-blue-400', security: 'text-red-400', 
      container: 'text-cyan-400', api: 'text-pink-400'
    };
    return colors[incidentType] || 'text-gray-400';
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center">
        <div className="text-center">
          <div className="flex items-center justify-center mb-4">
            <Brain className="w-8 h-8 text-purple-400 animate-pulse mr-2" />
            <MessageSquare className="w-8 h-8 text-blue-400 animate-bounce mr-2" />
            <Network className="w-8 h-8 text-green-400 animate-spin" />
          </div>
          <h2 className="text-2xl font-bold text-white mb-2">Loading MCP + A2A Enhanced System</h2>
          <p className="text-gray-400">Initializing Model Context Protocol and Agent-to-Agent Communication...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900">
      <style jsx global>{`
        .glass {
          background: rgba(255, 255, 255, 0.1);
          backdrop-filter: blur(10px);
          border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .mcp-glow { box-shadow: 0 0 20px rgba(168, 85, 247, 0.3); }
        .a2a-glow { box-shadow: 0 0 20px rgba(59, 130, 246, 0.3); }
      `}</style>
      
      <header className="glass border-b border-purple-700/50">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="p-2 bg-gradient-to-br from-purple-500/20 to-blue-500/20 rounded-xl">
                <div className="flex space-x-1">
                  <Brain className="w-6 h-6 text-purple-400" />
                  <MessageSquare className="w-6 h-6 text-blue-400" />
                </div>
              </div>
              <div>
                <h1 className="text-2xl font-bold text-white">MCP + A2A Enhanced AI System</h1>
                <p className="text-sm text-gray-300">Model Context Protocol • Agent-to-Agent Communication • Collective Intelligence</p>
              </div>
              {activeWorkflows.size > 0 && (
                <div className="flex items-center space-x-2 ml-8 bg-gradient-to-r from-purple-500/20 to-blue-500/20 px-3 py-1 rounded-lg">
                  <Network className="w-4 h-4 text-purple-400 animate-spin" />
                  <span className="text-purple-400 font-medium">{activeWorkflows.size} Enhanced Workflows</span>
                </div>
              )}
            </div>
            <div className="text-right">
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                <p className="text-sm font-medium text-green-400">MCP + A2A Active</p>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-6 py-8">
        {/* Enhanced Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-5 gap-6 mb-8">
          <div className="glass mcp-glow rounded-xl p-6 hover:bg-purple-500/10 transition-all">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-purple-300">MCP Contexts</p>
                <p className="text-2xl font-bold text-purple-400">{dashboardStats.enhanced_features?.mcp?.total_contexts || 0}</p>
                <p className="text-xs text-purple-500 mt-1">Shared Intelligence</p>
              </div>
              <Brain className="w-8 h-8 text-purple-400" />
            </div>
          </div>

          <div className="glass a2a-glow rounded-xl p-6 hover:bg-blue-500/10 transition-all">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-blue-300">A2A Messages</p>
                <p className="text-2xl font-bold text-blue-400">{dashboardStats.enhanced_features?.a2a?.total_messages || 0}</p>
                <p className="text-xs text-blue-500 mt-1">Agent Communication</p>
              </div>
              <MessageSquare className="w-8 h-8 text-blue-400" />
            </div>
          </div>

          <div className="glass rounded-xl p-6 hover:bg-green-500/10 transition-all">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-green-300">Active Incidents</p>
                <p className="text-2xl font-bold text-green-400">{dashboardStats.incidents?.active || 0}</p>
                <p className="text-xs text-green-500 mt-1">Enhanced Resolution</p>
              </div>
              <AlertTriangle className="w-8 h-8 text-green-400" />
            </div>
          </div>

          <div className="glass rounded-xl p-6 hover:bg-yellow-500/10 transition-all">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-yellow-300">Collaborations</p>
                <p className="text-2xl font-bold text-yellow-400">{dashboardStats.enhanced_features?.a2a?.active_collaborations || 0}</p>
                <p className="text-xs text-yellow-500 mt-1">Cross-agent</p>
              </div>
              <Share2 className="w-8 h-8 text-yellow-400" />
            </div>
          </div>

          <div className="glass rounded-xl p-6 hover:bg-pink-500/10 transition-all">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-pink-300">Intelligence</p>
                <p className="text-2xl font-bold text-pink-400">
                  {Math.round((dashboardStats.enhanced_features?.mcp?.avg_context_confidence || 0) * 100)}%
                </p>
                <p className="text-xs text-pink-500 mt-1">Confidence</p>
              </div>
              <Target className="w-8 h-8 text-pink-400" />
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 xl:grid-cols-3 gap-8">
          {/* Enhanced Controls */}
          <div className="xl:col-span-1 space-y-6">
            <div className="glass rounded-xl p-6">
              <h3 className="text-xl font-semibold text-white mb-4">Enhanced Controls</h3>
              <div className="space-y-3">
                <button
                  onClick={triggerTestIncident}
                  className="w-full bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 hover:from-purple-600 hover:via-pink-600 hover:to-red-600 text-white px-4 py-3 rounded-lg font-medium transition-all duration-300 flex items-center justify-center space-x-2 shadow-lg transform hover:scale-105"
                >
                  <div className="flex space-x-1">
                    <Brain className="w-4 h-4" />
                    <MessageSquare className="w-4 h-4" />
                  </div>
                  <span>Generate MCP+A2A Incident</span>
                </button>
                <p className="text-xs text-gray-400 text-center">
                  Enhanced with collective intelligence & agent collaboration
                </p>
                
                <div className="grid grid-cols-2 gap-2">
                  <button 
                    onClick={() => {setShowMcpModal(true); fetchAllData();}}
                    className="bg-gradient-to-r from-purple-500/20 to-purple-600/20 border border-purple-500/50 text-purple-300 px-3 py-2 rounded-lg text-sm font-medium hover:bg-purple-500/30 transition-all flex items-center justify-center space-x-1"
                  >
                    <Brain className="w-3 h-3" />
                    <span>MCP Status</span>
                  </button>
                  
                  <button 
                    onClick={() => {setShowA2aModal(true); fetchA2aCollaborations();}}
                    className="bg-gradient-to-r from-blue-500/20 to-blue-600/20 border border-blue-500/50 text-blue-300 px-3 py-2 rounded-lg text-sm font-medium hover:bg-blue-500/30 transition-all flex items-center justify-center space-x-1"
                  >
                    <MessageSquare className="w-3 h-3" />
                    <span>A2A Network</span>
                  </button>
                </div>
                
                <button 
                  onClick={fetchAllData}
                  className="w-full bg-gradient-to-r from-green-500/20 to-emerald-500/20 border border-green-500/50 text-green-300 px-4 py-2 rounded-lg font-medium hover:bg-green-500/30 transition-all flex items-center justify-center space-x-2"
                >
                  <RefreshCw className="w-4 h-4" />
                  <span>Refresh Enhanced Data</span>
                </button>
              </div>
            </div>
          </div>

          {/* Enhanced Incident Feed */}
          <div className="xl:col-span-2">
            <div className="glass rounded-xl p-6">
              <h3 className="text-xl font-semibold text-white mb-4">Enhanced Incident Feed</h3>
              <div className="space-y-3 max-h-96 overflow-y-auto">
                {incidents.length === 0 ? (
                  <div className="text-center py-8">
                    <div className="flex justify-center space-x-2 mb-4">
                      <Brain className="w-8 h-8 text-purple-600" />
                      <MessageSquare className="w-8 h-8 text-blue-600" />
                    </div>
                    <p className="text-gray-400 text-sm mb-2">No enhanced incidents yet!</p>
                    <p className="text-gray-500 text-xs">Generate an incident to see MCP+A2A intelligence in action</p>
                  </div>
                ) : (
                  incidents.map((incident) => {
                    const IncidentTypeIcon = getIncidentTypeIcon(incident.incident_type);
                    const typeColor = getIncidentTypeColor(incident.incident_type);
                    
                    return (
                      <div 
                        key={incident.id} 
                        className="bg-gradient-to-br from-gray-800/50 to-purple-900/20 rounded-lg p-3 border border-purple-600/30 hover:border-purple-500/50 transition-all cursor-pointer transform hover:scale-[1.02]"
                        onClick={() => viewIncidentDetails(incident.id)}
                      >
                        <div className="flex items-center justify-between mb-2">
                          <div className="flex items-center space-x-2">
                            <IncidentTypeIcon className={`w-4 h-4 ${typeColor}`} />
                            <span className={`px-2 py-1 rounded-full text-xs font-medium text-white ${
                              incident.severity === 'critical' ? 'bg-red-600' :
                              incident.severity === 'high' ? 'bg-orange-500' :
                              'bg-yellow-500'
                            }`}>
                              {incident.severity.toUpperCase()}
                            </span>
                            <div className="flex space-x-1">
                              <Brain className="w-3 h-3 text-purple-400" title="MCP Enhanced" />
                              <MessageSquare className="w-3 h-3 text-blue-400" title="A2A Enabled" />
                            </div>
                            {activeWorkflows.has(incident.id) && (
                              <Network className="w-4 h-4 text-green-400 animate-spin" />
                            )}
                          </div>
                        </div>
                        
                        <h4 className="text-sm font-medium text-white mb-2 truncate">
                          {incident.title}
                        </h4>
                        
                        <div className="w-full bg-gray-700 rounded-full h-2 mb-2">
                          <div 
                            className="bg-gradient-to-r from-purple-500 via-blue-500 to-green-500 h-2 rounded-full transition-all duration-500"
                            style={{ width: `${((incident.completed_agents?.length || 0) / 7) * 100}%` }}
                          />
                        </div>
                        
                        <div className="flex items-center justify-between">
                          <span className={`text-xs px-2 py-1 rounded ${
                            incident.workflow_status === 'completed' ? 'bg-green-500/20 text-green-400' :
                            incident.workflow_status === 'in_progress' ? 'bg-purple-500/20 text-purple-400' :
                            'bg-gray-500/20 text-gray-400'
                          }`}>
                            Enhanced {incident.workflow_status?.replace('_', ' ')}
                          </span>
                          <button className="text-xs text-purple-400 hover:text-purple-300 font-medium">
                            View Enhanced Details →
                          </button>
                        </div>
                      </div>
                    );
                  })
                )}
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* MCP Context Modal */}
      {showMcpModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="glass mcp-glow rounded-xl w-full max-w-4xl max-h-[90vh] overflow-hidden">
            <div className="p-6 border-b border-purple-700">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <Brain className="w-6 h-6 text-purple-400" />
                  <h2 className="text-2xl font-bold text-white">Model Context Protocol Status</h2>
                </div>
                <button onClick={() => setShowMcpModal(false)}>
                  <X className="w-6 h-6 text-gray-400 hover:text-white" />
                </button>
              </div>
            </div>
            <div className="p-6 overflow-y-auto max-h-[70vh]">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {mcpContexts.length > 0 ? (
                  mcpContexts.map((context) => (
                    <div key={context.context_id} className="bg-purple-900/20 border border-purple-600/30 rounded-lg p-4">
                      <div className="flex items-center justify-between mb-3">
                        <span className="text-sm font-medium text-purple-300">Context #{context.context_id.slice(0,8)}</span>
                        <span className="text-xs text-gray-400">v{context.context_version}</span>
                      </div>
                      <div className="space-y-2 text-sm">
                        <div className="flex justify-between">
                          <span className="text-gray-400">Agents:</span>
                          <span className="text-purple-400">{context.agent_count}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-400">Confidence:</span>
                          <span className="text-green-400">{Math.round(context.confidence_avg * 100)}%</span>
                        </div>
                      </div>
                    </div>
                  ))
                ) : (
                  <div className="col-span-2 text-center py-8">
                    <Brain className="w-12 h-12 text-purple-600 mx-auto mb-4" />
                    <p className="text-gray-400">No MCP contexts active</p>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* A2A Network Modal */}
      {showA2aModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="glass a2a-glow rounded-xl w-full max-w-6xl max-h-[90vh] overflow-hidden">
            <div className="p-6 border-b border-blue-700">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <MessageSquare className="w-6 h-6 text-blue-400" />
                  <h2 className="text-2xl font-bold text-white">Agent-to-Agent Network</h2>
                </div>
                <button onClick={() => setShowA2aModal(false)}>
                  <X className="w-6 h-6 text-gray-400 hover:text-white" />
                </button>
              </div>
            </div>
            <div className="p-6 overflow-y-auto max-h-[70vh]">
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* Recent Messages */}
                <div>
                  <h3 className="text-lg font-semibold text-blue-300 mb-4">Recent A2A Messages</h3>
                  <div className="space-y-3">
                    {a2aMessages.length > 0 ? (
                      a2aMessages.map((message) => (
                        <div key={message.message_id} className="bg-blue-900/20 border border-blue-600/30 rounded-lg p-3">
                          <div className="flex items-center justify-between mb-2">
                            <div className="flex items-center space-x-2">
                              <span className="text-blue-300 text-sm">{message.sender}</span>
                              <span className="text-gray-400">→</span>
                              <span className="text-green-300 text-sm">{message.receiver}</span>
                            </div>
                            <span className="text-xs text-purple-400 bg-purple-900/20 px-2 py-1 rounded">
                              {message.type?.replace('_', ' ')}
                            </span>
                          </div>
                        </div>
                      ))
                    ) : (
                      <div className="text-center py-8">
                        <MessageSquare className="w-8 h-8 text-blue-600 mx-auto mb-2" />
                        <p className="text-gray-400 text-sm">No A2A messages yet</p>
                      </div>
                    )}
                  </div>
                </div>

                {/* Collaborations */}
                <div>
                  <h3 className="text-lg font-semibold text-green-300 mb-4">Active Collaborations</h3>
                  <div className="space-y-3">
                    {a2aCollaborations.length > 0 ? (
                      a2aCollaborations.map((collab) => (
                        <div key={collab.collaboration_id} className="bg-green-900/20 border border-green-600/30 rounded-lg p-3">
                          <div className="text-green-300 text-sm font-medium mb-2">{collab.task}</div>
                          <div className="text-xs text-gray-400">
                            Participants: {collab.participants?.join(', ')}
                          </div>
                        </div>
                      ))
                    ) : (
                      <div className="text-center py-8">
                        <Share2 className="w-8 h-8 text-green-600 mx-auto mb-2" />
                        <p className="text-gray-400 text-sm">No active collaborations</p>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Enhanced Incident Details Modal */}
      {selectedIncident && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="glass rounded-xl w-full max-w-6xl max-h-[90vh] overflow-hidden">
            <div className="p-6 border-b border-gray-700">
              <div className="flex items-center justify-between">
                <div>
                  <div className="flex items-center space-x-3 mb-2">
                    <h2 className="text-2xl font-bold text-white">{selectedIncident.title}</h2>
                    <div className="flex space-x-1">
                      <Brain className="w-5 h-5 text-purple-400" title="MCP Enhanced" />
                      <MessageSquare className="w-5 h-5 text-blue-400" title="A2A Enabled" />
                    </div>
                  </div>
                  <p className="text-gray-400">Enhanced with MCP + A2A Architecture</p>
                </div>
                <button onClick={() => setSelectedIncident(null)}>
                  <X className="w-6 h-6 text-gray-400 hover:text-white" />
                </button>
              </div>
            </div>
            <div className="p-6 overflow-y-auto max-h-[70vh]">
              {/* Enhanced Features Summary */}
              {selectedIncident.enhanced_features && (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                  <div className="bg-purple-900/20 border border-purple-600/30 rounded-lg p-4">
                    <div className="flex items-center mb-3">
                      <Brain className="w-5 h-5 text-purple-400 mr-2" />
                      <h3 className="text-lg font-semibold text-purple-300">MCP Context</h3>
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-400">Agent Insights:</span>
                        <span className="text-purple-400">{selectedIncident.enhanced_features.mcp_context?.agent_insights_count || 0}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-400">Confidence:</span>
                        <span className="text-green-400">{Math.round((selectedIncident.enhanced_features.mcp_context?.avg_confidence || 0) * 100)}%</span>
                      </div>
                    </div>
                  </div>

                  <div className="bg-blue-900/20 border border-blue-600/30 rounded-lg p-4">
                    <div className="flex items-center mb-3">
                      <MessageSquare className="w-5 h-5 text-blue-400 mr-2" />
                      <h3 className="text-lg font-semibold text-blue-300">A2A Protocol</h3>
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-400">Messages:</span>
                        <span className="text-blue-400">
                          {(selectedIncident.enhanced_features.a2a_protocol?.total_messages_sent || 0) + 
                           (selectedIncident.enhanced_features.a2a_protocol?.total_messages_received || 0)}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-400">Collaborations:</span>
                        <span className="text-green-400">{selectedIncident.enhanced_features.a2a_protocol?.active_collaborations || 0}</span>
                      </div>
                    </div>
                  </div>
                </div>
              )}

              <div className="bg-gray-800/50 rounded-lg p-4">
                <h3 className="text-lg font-semibold text-white mb-4">Resolution</h3>
                <p className="text-gray-300">{selectedIncident.resolution || 'Resolution in progress with enhanced intelligence...'}</p>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
